// Code generated by protoc-gen-go. DO NOT EDIT.
// source: simple.proto

package simple

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Simple struct {
	Double               float64  `protobuf:"fixed64,1,opt,name=double,proto3" json:"double,omitempty"`
	Float                float32  `protobuf:"fixed32,2,opt,name=float,proto3" json:"float,omitempty"`
	Int32                int32    `protobuf:"varint,3,opt,name=int32,proto3" json:"int32,omitempty"`
	Int64                int64    `protobuf:"varint,4,opt,name=int64,proto3" json:"int64,omitempty"`
	Uint32               uint32   `protobuf:"varint,5,opt,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64               uint64   `protobuf:"varint,6,opt,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32               int32    `protobuf:"zigzag32,7,opt,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64               int64    `protobuf:"zigzag64,8,opt,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32              uint32   `protobuf:"fixed32,9,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64              uint64   `protobuf:"fixed64,10,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32             int32    `protobuf:"fixed32,11,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64             int64    `protobuf:"fixed64,12,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool                 bool     `protobuf:"varint,13,opt,name=bool,proto3" json:"bool,omitempty"`
	String_              string   `protobuf:"bytes,14,opt,name=string,proto3" json:"string,omitempty"`
	Bytes                []byte   `protobuf:"bytes,15,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Simple) Reset()         { *m = Simple{} }
func (m *Simple) String() string { return proto.CompactTextString(m) }
func (*Simple) ProtoMessage()    {}
func (*Simple) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ffd045dd4d042c1, []int{0}
}

func (m *Simple) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Simple.Unmarshal(m, b)
}
func (m *Simple) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Simple.Marshal(b, m, deterministic)
}
func (m *Simple) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Simple.Merge(m, src)
}
func (m *Simple) XXX_Size() int {
	return xxx_messageInfo_Simple.Size(m)
}
func (m *Simple) XXX_DiscardUnknown() {
	xxx_messageInfo_Simple.DiscardUnknown(m)
}

var xxx_messageInfo_Simple proto.InternalMessageInfo

func (m *Simple) GetDouble() float64 {
	if m != nil {
		return m.Double
	}
	return 0
}

func (m *Simple) GetFloat() float32 {
	if m != nil {
		return m.Float
	}
	return 0
}

func (m *Simple) GetInt32() int32 {
	if m != nil {
		return m.Int32
	}
	return 0
}

func (m *Simple) GetInt64() int64 {
	if m != nil {
		return m.Int64
	}
	return 0
}

func (m *Simple) GetUint32() uint32 {
	if m != nil {
		return m.Uint32
	}
	return 0
}

func (m *Simple) GetUint64() uint64 {
	if m != nil {
		return m.Uint64
	}
	return 0
}

func (m *Simple) GetSint32() int32 {
	if m != nil {
		return m.Sint32
	}
	return 0
}

func (m *Simple) GetSint64() int64 {
	if m != nil {
		return m.Sint64
	}
	return 0
}

func (m *Simple) GetFixed32() uint32 {
	if m != nil {
		return m.Fixed32
	}
	return 0
}

func (m *Simple) GetFixed64() uint64 {
	if m != nil {
		return m.Fixed64
	}
	return 0
}

func (m *Simple) GetSfixed32() int32 {
	if m != nil {
		return m.Sfixed32
	}
	return 0
}

func (m *Simple) GetSfixed64() int64 {
	if m != nil {
		return m.Sfixed64
	}
	return 0
}

func (m *Simple) GetBool() bool {
	if m != nil {
		return m.Bool
	}
	return false
}

func (m *Simple) GetString_() string {
	if m != nil {
		return m.String_
	}
	return ""
}

func (m *Simple) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

func init() {
	proto.RegisterType((*Simple)(nil), "simple.Simple")
}

func init() {
	proto.RegisterFile("simple.proto", fileDescriptor_5ffd045dd4d042c1)
}

var fileDescriptor_5ffd045dd4d042c1 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0xd1, 0xc1, 0x4e, 0xc3, 0x30,
	0x0c, 0x06, 0x60, 0x79, 0x6b, 0xd3, 0x2e, 0x74, 0x0c, 0x22, 0x84, 0x2c, 0x4e, 0x16, 0x27, 0x9f,
	0x38, 0xac, 0x55, 0x1e, 0x80, 0x47, 0x30, 0x37, 0x6e, 0x54, 0xeb, 0x50, 0xa5, 0xb2, 0x4c, 0x6b,
	0x26, 0xc1, 0x5b, 0xf3, 0x08, 0xa8, 0x4d, 0x52, 0x6e, 0xfe, 0x7e, 0x3b, 0x51, 0xe4, 0xe8, 0x6a,
	0xec, 0xbf, 0xce, 0x43, 0xf7, 0x72, 0xbe, 0x38, 0xef, 0x8c, 0x0a, 0x7a, 0xfe, 0x5d, 0x69, 0xf5,
	0x36, 0x97, 0xe6, 0x51, 0xab, 0x83, 0xbb, 0xb6, 0x43, 0x87, 0x40, 0xc0, 0x20, 0x51, 0xe6, 0x41,
	0xe7, 0xc7, 0xc1, 0x7d, 0x78, 0x5c, 0x11, 0xf0, 0x4a, 0x02, 0xa6, 0xb4, 0x3f, 0xf9, 0x7a, 0x8f,
	0x6b, 0x02, 0xce, 0x25, 0x20, 0xa6, 0xb6, 0xc1, 0x8c, 0x80, 0xd7, 0x12, 0x30, 0xdd, 0x7c, 0x0d,
	0xc3, 0x39, 0x01, 0x6f, 0x25, 0x2a, 0xe5, 0xb6, 0x41, 0x45, 0xc0, 0x99, 0x44, 0x4d, 0xf9, 0x18,
	0xe6, 0x0b, 0x02, 0xbe, 0x97, 0xa8, 0x94, 0xdb, 0x06, 0x4b, 0x02, 0x36, 0x12, 0x65, 0x50, 0x17,
	0xc7, 0xfe, 0xbb, 0x3b, 0xd4, 0x7b, 0xdc, 0x10, 0x70, 0x21, 0x89, 0x4b, 0xc7, 0x36, 0xa8, 0x09,
	0x58, 0x49, 0xa2, 0x79, 0xd2, 0xe5, 0x98, 0x0e, 0xdd, 0x10, 0xf0, 0x4e, 0x16, 0xff, 0xf7, 0x6c,
	0x83, 0x15, 0x01, 0xdf, 0xc9, 0x62, 0x63, 0x74, 0xd6, 0x3a, 0x37, 0xe0, 0x96, 0x80, 0x4b, 0x99,
	0xeb, 0xf9, 0x5d, 0xfe, 0xd2, 0x9f, 0x3e, 0xf1, 0x96, 0x80, 0x37, 0x12, 0x35, 0x6d, 0xa3, 0xfd,
	0xf1, 0xdd, 0x88, 0x3b, 0x02, 0xae, 0x24, 0xe0, 0xb5, 0x7c, 0x8f, 0xcb, 0x6f, 0xd5, 0xfc, 0x17,
	0xf5, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf1, 0xa1, 0x87, 0xe9, 0x9b, 0x01, 0x00, 0x00,
}
